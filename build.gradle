group 'com.superlbs'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

import com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

//buildscript {
//    repositories {
//        jcenter()
//    }
//
//    dependencies {
//        classpath 'eu.appsatori:gradle-fatjar-plugin:0.3'
//    }
//}

repositories {
    mavenLocal()
    maven { url 'http://dev.wisorg.com/nexus/content/groups/public/' }
}

dependencies {
    compile(
            'org.springframework:spring-context:4.2.2.RELEASE',
            'org.hibernate:hibernate-core:5.0.4.Final',
            'org.springframework:spring-orm:4.2.2.RELEASE',
            'javax.transaction:jta:1.1'
    )

    compile(
            'mysql:mysql-connector-java:5.1.37',
            'org.apache.httpcomponents:httpclient:4.5.1',
            'com.alibaba:fastjson:1.2.7',
            'org.jsoup:jsoup:1.8.3',
            'org.apache.commons:commons-lang3:3.4',
            'org.slf4j:slf4j-api:1.7.13',
            'ch.qos.logback:logback-core:1.1.3',
            'com.hynnet:logback-classic:1.1.3'
    )

    compile(
            'com.google.guava:guava:19.0-rc2',
            'com.google.code.findbugs:findbugs:3.0.1',
    )

    testCompile(
            'junit:junit:4.11'
    )
}

jar {
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Main-Class': 'com.supc.app.CSpider'
    }
}

task run(type: JavaExec, dependsOn: 'classes') {
    description '运行指定main函数的java'
    classpath = sourceSets.main.runtimeClasspath
//    if(project.hasProperty('main')){
    main = "com.supc.app.CSpider"
//    }
}

shadowJar {
    manifest {
        attributes 'Main-Class': 'com.supc.app.CSpider'
    }
//    mergeServiceFiles()
}

//
//shadow {
//    transformer(com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer) {
//        mainClass = 'com.supc.app.CSpider'
//    }
//    transformer(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) {
//        resource = 'META-INF/spring.handlers'
//    }
//    transformer(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) {
//        resource = 'META-INF/spring.schemas'
//    }
//}